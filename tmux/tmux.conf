# Use tmux 256 colors and enable italics.
set-option -g default-terminal "tmux-256color"
set-option -sa terminal-overrides ",alacritty:RGB,xterm-256color:RGB,gnome*:RGB"
set-option -as terminal-overrides ',st*:Smulx=\E[4::%p1%dm'  # undercurl support
set-option -as terminal-overrides ',st*:Setulc=\E[58::2::%p1%{65536}%/%d::%p1%{256}%/%{255}%&%d::%p1%{255}%&%d%;m'  # underscore colours

# Reload tmux config with <prefix>-r.
bind-key -N "Config reload" r source-file ~/.config/tmux/tmux.conf\; display '~/.config/tmux/tmux.conf sourced'

# Set default shell
set-option -g default-shell /usr/local/bin/fish
# Set scroll history to 100,000 lines.
set-option -g history-limit 100000

# remap prefix
unbind-key C-b
set-option -g prefix M-g
bind-key M-g send-prefix

# C-a prefix for nested tmux sessions.
#bind-key -n C-a send-prefix

# https://github.com/tmux/tmux/issues/353#issuecomment-294570322
# Lower the time it takes to register ESC.
set-option -s escape-time 10

# Increase tmux messages display duration from 750ms to 4s
set-option -g display-time 4000
set-option -g display-panes-time 4000

# Refresh 'status-left' and 'status-right' more often, from every 15s to 5s
set-option -g status-interval 10

# required by neovim autoread
set-option -g focus-events on

# Mouse mode on.
set-option -g mouse on
# bind-key -T root MouseDown2Pane select-pane -t = \; if-shell -F "#{||:#{pane_in_mode},#{mouse_any_flag}}" { send-keys -M } { paste-buffer -p }

# Allow outside applications (like a nested Tmux session) to set the clipboard.
set-option -g set-clipboard on

# When scrolling with mouse wheel, reduce number of scrolled rows per tick to 1.
bind-key -T copy-mode-vi WheelUpPane select-pane\; send-keys -X -N 5 scroll-up
bind-key -T copy-mode-vi WheelDownPane select-pane\; send-keys -X -N 5 scroll-down

# Use Vim keybind-keyings in copy mode.
bind-key Escape copy-mode
set-option -wg mode-keys vi
unbind-key -T copy-mode-vi v
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi _ send-keys -X back-to-indentation
bind-key -T copy-mode-vi C-v send-keys -X rectangle-toggle\; send-keys -X begin-selection
bind-key -T copy-mode-vi y if-shell -F '#{selection_present}'\
 "send-keys -X copy-selection\; run-shell -b 'tmux showb|xclip -sel clip'"\
 "switch-client -T copy-mode-vi-yank"
bind-key -T copy-mode-vi Y send-keys -X begin-selection\; send-keys -X end-of-line\;\
 send-keys -X cursor-left\; send-keys -X copy-selection\; run-shell -b 'tmux showb|xclip -sel clip'
bind-key -T copy-mode-vi Escape if-shell -F '#{selection_present}' 'send-keys -X clear-selection' 'send-keys -X cancel'
bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "xclip -in -sel clip"
bind-key -T copy-mode-vi-yank Escape switch-client -T copy-mode-vi
bind-key -T copy-mode-vi-yank w switch-client -T copy-mode-vi\; send-keys -X begin-selection\;\
 send-keys -X next-word\; send-keys -X cursor-left\; send-keys -X copy-selection\; run-shell -b 'tmux showb|xclip -sel clip'
bind-key -T copy-mode-vi-yank e switch-client -T copy-mode-vi\; send-keys -X select-word\;\
 send-keys -X copy-selection\; run-shell -b 'tmux showb|xclip -sel clip'
bind-key -T copy-mode-vi-yank b switch-client -T copy-mode-vi\; send-keys -X previous-word\;\
 send-keys -X select-word\; send-keys -X copy-selection\; run-shell -b 'tmux showb|xclip -sel clip'

# Order sessions alphabetically when switching.
#bind-key s choose-tree -sZ -O name

# Start windows and panes at 1, not 0
set-option -g base-index 1
set-option -wg pane-base-index 1

# Split panes using | and -.
unbind-key '"'
unbind-key %
bind-key -N "Split vertical" | split-window -h -c "#{pane_current_path}"
bind-key -N "Split horizontal" - split-window -v -c "#{pane_current_path}"

# Vim-like pane navigation and resizing.
bind-key h select-pane -L
bind-key j select-pane -D
bind-key k select-pane -U
bind-key l select-pane -R
bind-key -r H resize-pane -L 5
bind-key -r J resize-pane -D 5
bind-key -r K resize-pane -U 5
bind-key -r L resize-pane -R 5

# Pane layouts
bind-key -N "Resize width to 70" M-7 resize-pane -x 70
bind-key -N "Resize width to 84" M-8 resize-pane -x 84
bind-key -N "Resize width to 90" M-9 resize-pane -x 90

# Without prefix keys
bind-key -N "Full screen other" -T root C-M-F select-pane -U \; select-pane -L \; resize-pane -Z
bind-key -N "Full screen" -T root M-F resize-pane -Z
bind-key -N "Mode copy" -T root M-Escape copy-mode
bind-key -N "Resize down" -T root C-M-J resize-pane -D
bind-key -N "Resize left" -T root C-M-H resize-pane -L
bind-key -N "Resize right" -T root C-M-L resize-pane -R
bind-key -N "Resize up" -T root C-M-K resize-pane -U
bind-key -N "Select down" -T root M-J select-pane -D
bind-key -N "Select left" -T root M-H select-pane -L
bind-key -N "Select right" -T root M-L select-pane -R
bind-key -N "Select up" -T root M-K select-pane -U
bind-key -N "Split horizontal 10" -T root C-M-S split-window -v -l 10 -c "#{pane_current_path}"
bind-key -N "Split horizontal" -T root M-S split-window -v -c "#{pane_current_path}"
bind-key -N "Split vertical 72" -T root C-M-V split-window -h -l 72 -c "#{pane_current_path}"
bind-key -N "Split vertical" -T root M-V split-window -h -c "#{pane_current_path}"
bind-key -N "Swap window with next" -T root C-M-O swap-window -t +
bind-key -N "Swap window with prev" -T root C-M-I swap-window -t -
bind-key -N "Tab new" -T root M-T new-window
bind-key -N "Tab next" -T root M-O next-window
bind-key -N "Tab prev" -T root M-I previous-window
bind-key -N "Toggle mouse" -T root M-M set-option -g mouse \; display-message "mouse #{?mouse,on,off}"
bind-key -N "Pattern rofi paths" -T root C-M-P run-shell -b "tmux capturep -J -p|rg -o '[A-Za-z0-9\u00C0-\u024F\u1E00-\u1EFF~@#,%_·$-]*([/.]+[A-Za-z0-9\u00C0-\u024F\u1E00-\u1EFF~@#,%_·$-]*)+'|tac|uniq -u|rofi -m -1 -dmenu|xclip -r -sel clip"
bind-key -N "Pattern rofi urls" -T root C-M-U run-shell -b "tmux capturep -J -p|rg -o '(magnet:|mailto:|gemini:|gopher:|https?:|news:|file:|git:|ssh:|ftp:)[^\u0000-\u001F\u007F-\u009F<>\"\\s{-}\\^⟨⟩`\u21b2]+'|tac|uniq -u|rofi -m -1 -dmenu|xclip -r -sel clip"
bind-key -N "Pattern rofi numbers" -T root C-M-N run-shell -b "tmux capturep -J -p|rg -o '[0-9]*\\.?[0-9]+'|tac|uniq -u|rofi -m -1 -dmenu|xclip -r -sel clip"
bind-key -N "Pattern rofi hashes" -T root C-M-A run-shell -b "tmux capturep -J -p|rg -o '[0-9a-fA-F]+'|tac|uniq -u|rofi -m -1 -dmenu|xclip -r -sel clip"
bind-key -N "Pattern rofi words" -T root C-M-W run-shell -b "tmux capturep -J -p|rg -o '[^[:space:]]+'|tac|uniq -u|rofi -m -1 -dmenu|xclip -r -sel clip"
bind-key -N "Pattern rofi commands" -T root C-M-C run-shell -b "tmux capturep -J -p|rg -o '(❯|sudo|b?[as]sh|if|for|docker-compose|docker|git|ls|cd|mkdir|cat|n?vim?|c?make|cargo|rust|python[23]?|pip|pytest|mvn|apt|php|node|np[mx]|p?grep|p?kill|fdfind|find|rg|echo|g?awk|curl|sed|basename|dirname|head|tail) +[^│↲]*[^[:space:]│↲]+'|tac|uniq -u|rofi -m -1 -dmenu|xclip -r -sel clip"

# Plugins
# [ tmux-thumbs
set-option -g @thumbs-alphabet qwerty
set-option -g @thumbs-position off_left
set-option -g @thumbs-reverse enabled
set-option -g @thumbs-unique enabled
set-option -ug @thumbs-regexp-1
set-option -ug @thumbs-regexp-2
set-option -ug @thumbs-regexp-3
set-option -ug @thumbs-regexp-4
set-option -ug @thumbs-regexp-5
set-option -g @thumbs-bg-color black
set-option -g @thumbs-fg-color "#77ff00"
set-option -g @thumbs-hint-bg-color black
set-option -g @thumbs-hint-fg-color "#ff7700"
set-option -g @thumbs-select-bg-color black
set-option -g @thumbs-select-fg-color "#0077ff"
set-option -g @thumbs-multi-bg-color black
set-option -g @thumbs-multi-fg-color "#ffd700"
set-option -g @thumbs-dir '$HOME/Prog/rust/tmux-thumbs'
set-option -Fg @thumbs-release '#{@thumbs-dir}/target/release'
set-option -g @thumbs-command \
 'tmux setb -- \"{}\"&&if type xclip;then echo -n \"{}\"|xclip -sel clip&&tmux display \"Copied to clipboard: {}\";else tmux display \"Copied: {}\";fi'
set-option -g @thumbs-upcase-command \
 'tmux setb -- \"{}\"&&tmux pasteb&&tmux display \"Copied {}\"'
set-option -g @thumbs-multi-command \
 'tmux setb -- \"{}\"&& tmux pasteb&&tmux send \" \" && tmux display \"Copied multiple items!\"'
set-option -Fs command-alias[7] \
 thumbs='run-shell -b '"'"'#{@thumbs-release}/tmux-thumbs\
 --dir "#{@thumbs-dir}" --command="#{@thumbs-command}"\
 --upcase-command="#{@thumbs-upcase-command}"\
 --multi-command="#{@thumbs-multi-command}"'"'"
bind-key -N "Pattern hints" -T root M-P set -g @thumbs-regexp-1 \
 '[A-Za-z0-9\u00C0-\u024F\u1E00-\u1EFF~@#,%_·$-]*(?:[/.]+[A-Za-z0-9\u00C0-\u024F\u1E00-\u1EFF~@#,%_·$-]*)+'\; thumbs
bind-key -N "Pattern hints open" -T root M-U set -ug @thumbs-regexp-1\; \
 run-shell -b '#{@thumbs-release}/tmux-thumbs\
 --dir "#{@thumbs-dir}" --command="rofi-open \"{}\""'
bind-key -N "Pattern numbers" -T root M-N set -g @thumbs-regexp-1 '[0-9]*\\.?[0-9]+' \; thumbs
bind-key -N "Pattern words" -T root M-W set -g @thumbs-regexp-1 '[^[:space:]│↲\n]{2,}' \; thumbs
bind-key -N "Pattern commands" -T root M-C set -g @thumbs-regexp-1 \
 '(?:❯ +([^│↲\n]*[^[:space:]│↲\n]+)|((?:sudo|b?[as]sh|if|for|docker-compose|docker\
|git|ls|cd|mkdir|cat|n?vim?|c?make|cargo|rust|python[23]?|pip|pytest|mvn|apt\
|php|node|np[mx]|p?grep|p?kill|fdfind|find|rg|echo|g?awk|curl|sed\
|basename|dirname|head|tail) +[^│↲\n]*[^[:space:]│↲\n]+))' \; thumbs
bind-key -N "Pattern command outputs" -T root M-B set -g @thumbs-regexp-1 '❯ +([^⏎]+)' \; thumbs
bind-key -N "Pattern quotes" -T root M-Q set -g @thumbs-regexp-1 \
 "(?:^|[^\\\\])(\"(?:\\\\\"|[^\"\n])*[^\\\\\n]\"|'(?:\\\\'|[^'\n])*[^\\\\\n]'|`(?:\\\\`|[^`\n])*[^\\\\\n]`)" \; thumbs
# ] tmux-thumbs

# Renumber windows when a window is closed.
set-option -g renumber-windows on

# Turn on activity monitors.
set-option -g monitor-activity on
set-option -g visual-activity off

## COLORSCHEME: gruvbox dark
set-option -g status "on"
set-option -g status-keys emacs

set-option -g status-style bg=colour237,fg=colour223 # bg=bg1, fg=fg1

set-option -wg window-status-activity-style bold,underscore

set-option -g pane-active-border-style fg=colour149,bg=default #fg2
set-option -g pane-border-style fg=colour239 #bg1

set-option -g message-style bg=colour239,fg=colour223 # bg=bg2, fg=fg1

set-option -g message-command-style bg=colour239,fg=colour223 # bg=fg3, fg=bg1

set-option -g display-panes-active-colour colour250 #fg2
set-option -g display-panes-colour colour237 #bg1

set-option -g status-justify "left"
set-option -g status-left-style none
set-option -g status-left-length 16
set-option -g status-right-style none
set-option -g status-right-length 32
set-option -wg window-status-separator ""

set-option -g status-left "#[fg=colour248, bg=colour241] #S #[fg=colour241, bg=colour237, nobold, noitalics, nounderscore]"
set-option -g status-right "#[fg=colour248, bg=colour237, nobold, noitalics, nounderscore]#[bg=colour248]\
#{?pane_in_mode,#[fg=colour125],#[fg=colour237]}#{?client_prefix, ⌨  ,}#{?pane_in_mode, ,}#{pane_mode} "

set-environment -g FISH_TITLE_CMD_MAX_LEN 34
bind-key -N "Config reload" d display "var: $FISH_TITLE_CMD_MAX_LEN"
set-option -wg window-status-format "\
#[fg=colour237, bg=colour239, nobold, noitalics, nounderscore]#[fg=colour149, bg=colour239] #I \
#[fg=colour143, bg=colour239] #{s/(❯)/#[fg=colour100]\\1#[fg=colour155]/:#{=/36/…:pane_title}} \
#[fg=colour239, bg=colour237, nobold, noitalics, nounderscore]"
set-option -wg window-status-current-format "\
#[fg=colour237, bg=colour149, bold, noitalics, nounderscore]#[fg=colour239, bg=colour149] #I \
#[fg=colour232, bg=colour149, bold] #{s/(❯)/#[fg=colour100]\\1#[fg=colour238, nobold]/:#{=/26/…:pane_title}} \
#[fg=colour149, bg=colour237, nobold, noitalics, nounderscore]"
