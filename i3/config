# i3 config file (v4)
#
# Please see https://i3wm.org/docs/userguide.html for a complete reference!

set $mod Mod4
set $root focus parent;focus parent;focus parent;focus parent;focus parent

# class         border  backgr. text    indicator child_border
client.focused  #4c7899 #285577 #ffffff #fd095d   #ed095d

gaps inner 2
gaps outer 3
default_border pixel 2
default_floating_border pixel 2

# sudo apt install xfonts-terminus
font xft:Hack Nerd Font Mono 9

# xss-lock grabs a logind suspend inhibit lock and will use i3lock to lock the
# screen before suspend. Use loginctl lock-session to lock your screen.
set $lock i3lock --nofork --color=000000
exec --no-startup-id "pkill -x xss-lock && pidwait -x xss-lock; xss-lock --transfer-sleep-lock -- $lock &"
exec --no-startup-id "pkill -x picom && pidwait -x picom; picom -b --config /dev/null --backend xrender"
exec --no-startup-id "pkill -x nm-applet && pidwait -x nm-applet; nm-applet &"
exec --no-startup-id "pkill -x parcellite && pidwait -x parcellite; parcellite &"
exec_always --no-startup-id "pkill -x keynav && pidwait -x keynav; keynav"

focus_follows_mouse no
mouse_warping none

bindsym $mod+Control+question exec --no-startup-id rofi-shortcuts &
bindsym $mod+Pause exec --no-startup-id $lock &
bindsym $mod+Print exec --no-startup-id flameshot gui &
bindsym $mod+ntilde exec --no-startup-id dunstctl close &
bindsym $mod+Shift+ntilde exec --no-startup-id dunstctl close-all &
bindsym $mod+ccedilla exec --no-startup-id dunstctl history-pop &
bindsym $mod+Shift+ccedilla exec --no-startup-id dunstctl context &

set $rofi_args -mesg 'Submit input: C-j/C-RET'\
 -kb-accept-entry Control+m,Return,KP_Enter -kb-accept-custom\
 Control+j,Control+Return -kb-select-1 ctrl+1 -kb-select-2 ctrl+2\
 -kb-select-3 ctrl+3 -kb-select-4 ctrl+4 -kb-select-5 ctrl+5\
 -kb-select-6 ctrl+6 -kb-select-7 ctrl+7 -kb-select-8 ctrl+8\
 -kb-select-9 ctrl+9 -kb-select-10 ctrl+0 -kb-page-prev alt+p\
 -kb-page-next alt+n -kb-secondary-paste ctrl+y
set $focused xprop -root _NET_ACTIVE_WINDOW|cut -d' ' -f5
bindsym $mod+Control+t exec --no-startup-id "TRA=$(seq 1 -0.05 0.7|rofi -m -1 -dmenu $rofi_args);\
 [ -n \\"$TRA\\" ] && transset --id $(printf '%d' $($focused)) $TRA &"
bindsym $mod+Control+b exec --no-startup-id "BRI=$(seq 1 -0.05 0.3|rofi -m -1 -dmenu $rofi_args);\
 [ -n \\"$BRI\\" ] && xrandr --listactivemonitors|tail +2|sed 's/.* //'|xargs -I {} xrandr --output {} --brightness $BRI &"

# Use pactl to adjust volume in PulseAudio.
# set $refresh_i3status killall -SIGUSR1 i3status
# bindsym XF86AudioRaiseVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ +10% && $refresh_i3status &
bindsym XF86AudioRaiseVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ +10% &
bindsym XF86AudioLowerVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ -10% &
bindsym XF86AudioMute exec --no-startup-id pactl set-sink-mute @DEFAULT_SINK@ toggle &
bindsym XF86AudioMicMute exec --no-startup-id pactl set-source-mute @DEFAULT_SOURCE@ toggle &

bindsym $mod+Prior exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ +5% &
bindsym $mod+Next exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ -5% &
bindsym $mod+Shift+Prior exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ +20% &
bindsym $mod+Shift+Next exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ -20% &

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# start a terminal
set $font 'Hack Nerd Font Mono:size=8.8'
bindsym $mod+Return exec st -f $font tmux
bindsym $mod+Shift+Return $root;layout splith;exec st -f $font tmux;resize set width 50 ppt
# bindsym $mod+Return exec wezterm &
# bindsym $mod+Shift+Return $root;layout splith;exec wezterm &;resize set width 50 ppt
# bindsym $mod+Return exec alacritty msg create-window || alacritty &
# bindsym $mod+Shift+Return $root;layout splith;exec alacritty msg create-window || alacritty &;resize set width 50 ppt
# bindsym $mod+Mod1+Return exec "alacritty msg create-window --class Alacritty,TilingFloat &"
# start emacs
bindsym $mod+i exec ec &
bindsym $mod+Shift+i $root;layout splith;exec ec;resize set width 50 ppt

bindsym $mod+Shift+b exec --no-startup-id feh --bg-scale --randomize ~/Pictures/wallpapers/*.jpg &
bindsym $mod+Mod1+space exec --no-startup-id remap &

# kill focused window
bindsym $mod+Shift+q kill

# start dmenu (a program launcher)
bindsym $mod+r exec --no-startup-id "rofi -m -1 -show run $rofi_args &"
bindsym $mod+Shift+r exec --no-startup-id "rofi -m -1 -show drun $rofi_args &"
bindsym $mod+Control+r exec --no-startup-id rofi-commands &
# There also is the (new) i3-dmenu-desktop which only displays applications
# shipping a .desktop file. It is a wrapper around dmenu, so you need that
# installed.
# bindsym $mod+d exec --no-startup-id i3-dmenu-desktop

# change focus
bindsym $mod+o exec --no-startup-id i3-easyfocus --all --font terminus-32 \
 --color-unfocused-bg 000000 --color-unfocused-fg 00FF00 \
 --color-focused-bg 555555 --color-focused-fg AAAAAA

# alternatively, you can use the cursor keys:
bindsym $mod+h focus left
bindsym $mod+j focus down
bindsym $mod+k focus up
bindsym $mod+l focus right
bindsym $mod+Tab fullscreen disable; focus next sibling; fullscreen enable
bindsym $mod+Shift+Tab fullscreen disable; focus prev sibling; fullscreen enable
bindsym $mod+period exec rofi -m -1 -i -disable-history -sorting-method fzf -show window -window-format \\"<span foreground='#f193f9'>{c}</span> <span foreground='#bcfd59'>{w}</span> {t}\\" -kb-select-1 ctrl+1 -kb-select-2 ctrl+2 -kb-select-3 ctrl+3 -kb-select-4 ctrl+4 -kb-select-5 ctrl+5 -kb-select-6 ctrl+6 -kb-select-7 ctrl+7 -kb-select-8 ctrl+8 -kb-select-9 ctrl+9 -kb-select-10 ctrl+0 -kb-page-prev alt+p -kb-page-next alt+n

# movement
bindsym $mod+g mark tmp_mv_src;$root;layout splith;mark tmp_mv_dst\
 ;[con_mark="tmp_mv_src"] focus;move window to mark tmp_mv_dst\
 ;unmark tmp_mv_src;unmark tmp_mv_dst

set $swap_right CWS=$(i3-msg -t get_workspaces|\
 jq -r '.[]|select(.focused==true).name');\
 i3-msg -t get_outputs|\
 jq -r '.[]|\\"\\(.name):\\(.current_workspace)\\"'|grep -v :null|\
 (IFS=:; CMD=; read LSC FWS; while read SC WS;\
  do CMD=\\"${CMD}workspace number $WS;move workspace to output $LSC;\\"; LSC=$SC; done;\
  i3-msg \\"${CMD}workspace number $FWS;move workspace to output $LSC;workspace number $CWS\\")

set $swap_left CWS=$(i3-msg -t get_workspaces|\
 jq -r '.[]|select(.focused==true).name');\
 i3-msg -t get_outputs|\
 jq -r '.[]|\\"\\(.name):\\(.current_workspace)\\"'|grep -v :null|\
 (IFS=:; CMD=; read FSC LWS; while read SC WS;\
  do CMD=\\"${CMD}workspace number $LWS;move workspace to output $SC;\\"; LWS=$WS; done;\
  i3-msg \\"${CMD}workspace number $LWS;move workspace to output $FSC;workspace number $CWS\\")

bindsym $mod+Control+h move workspace to output left
bindsym $mod+Control+j exec --no-startup-id "$swap_right"
bindsym $mod+Control+k exec --no-startup-id "$swap_left"
bindsym $mod+Control+l move workspace to output right

# alternatively, you can use the cursor keys:
bindsym $mod+Shift+h move left
bindsym $mod+Shift+j move down
bindsym $mod+Shift+k move up
bindsym $mod+Shift+l move right

# swap two windows
bindsym $mod+Mod1+h mark tmp_mv_src; focus left; swap container with mark tmp_mv_src; unmark tmp_mv_src
bindsym $mod+Mod1+j mark tmp_mv_src; focus down; swap container with mark tmp_mv_src; unmark tmp_mv_src
bindsym $mod+Mod1+k mark tmp_mv_src; focus up; swap container with mark tmp_mv_src; unmark tmp_mv_src
bindsym $mod+Mod1+l mark tmp_mv_src; focus right; swap container with mark tmp_mv_src; unmark tmp_mv_src

# move focused window
set $edit_mode "S+ mv,C+ ws2scr,A+ size5,S+A+ size1"
mode $edit_mode {
  bindsym h focus left
  bindsym j focus down
  bindsym k focus up
  bindsym l focus right
  bindsym Shift+h move left
  bindsym Shift+j move down
  bindsym Shift+k move up
  bindsym Shift+l move right
  bindsym Control+h move workspace to output left
  bindsym Control+j exec --no-startup-id "$swap_right"
  bindsym Control+k exec --no-startup-id "$swap_left"
  bindsym Control+l move workspace to output right

  bindsym Mod1+h resize shrink width 5 px or 5 ppt
  bindsym Mod1+j resize grow height 5 px or 5 ppt
  bindsym Mod1+k resize shrink height 5 px or 5 ppt
  bindsym Mod1+l resize grow width 5 px or 5 ppt
  bindsym Mod1+Shift+h resize shrink width 1 px or 1 ppt
  bindsym Mod1+Shift+j resize grow height 1 px or 1 ppt
  bindsym Mod1+Shift+k resize shrink height 1 px or 1 ppt
  bindsym Mod1+Shift+l resize grow width 1 px or 1 ppt

  bindsym s split v
  bindsym v split h
  bindsym q layout stacking
  bindsym w layout tabbed
  bindsym e layout toggle split
  bindsym u focus parent
  bindsym d focus child
  bindsym space focus mode_toggle
  bindsym Shift+space floating toggle

  # same bindings, but for the arrow keys
  bindsym Left move left 10 ppt
  bindsym Down move down 10 ppt
  bindsym Up move up 10 ppt
  bindsym Right move right 10 ppt

  bindsym Return exec st -f $font tmux
  # bindsym Return exec alacritty msg create-window || alacritty &

  bindsym $mod+m mode "default"
  bindsym Escape mode "default"
}
bindsym $mod+m mode $edit_mode

# split in horizontal orientation
bindsym $mod+s split v

# split in vertical orientation
bindsym $mod+v split h

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle
bindsym $mod+t border toggle

# change container layout (stacked, tabbed, toggle split)
bindsym $mod+q layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# focus the parent container
bindsym $mod+u focus parent

# focus the child container
bindsym $mod+d focus child

# Define names for default workspaces for which we configure key bindings later on.
# We use variables to avoid repeating the names in multiple places.
set $ws1 "1"
set $ws2 "2"
set $ws3 "3"
set $ws4 "4"
set $ws5 "5"
set $ws6 "6"
set $ws7 "7"
set $ws8 "8"
set $ws9 "9"
set $ws10 "10"
set $ws11 "11"
set $ws12 "12"

# switch to workspace
bindsym $mod+1 workspace number $ws1
bindsym $mod+2 workspace number $ws2
bindsym $mod+3 workspace number $ws3
bindsym $mod+4 workspace number $ws4
bindsym $mod+5 workspace number $ws5
bindsym $mod+6 workspace number $ws6
bindsym $mod+7 workspace number $ws7
bindsym $mod+8 workspace number $ws8
bindsym $mod+9 workspace number $ws9
bindsym $mod+0 workspace number $ws10
bindsym $mod+apostrophe workspace number $ws11
bindsym $mod+exclamdown workspace number $ws12

# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace number $ws1
bindsym $mod+Shift+2 move container to workspace number $ws2
bindsym $mod+Shift+3 move container to workspace number $ws3
bindsym $mod+Shift+4 move container to workspace number $ws4
bindsym $mod+Shift+5 move container to workspace number $ws5
bindsym $mod+Shift+6 move container to workspace number $ws6
bindsym $mod+Shift+7 move container to workspace number $ws7
bindsym $mod+Shift+8 move container to workspace number $ws8
bindsym $mod+Shift+9 move container to workspace number $ws9
bindsym $mod+Shift+0 move container to workspace number $ws10
bindsym $mod+Shift+apostrophe move container to workspace number $ws11
bindsym $mod+Shift+exclamdown move container to workspace number $ws12

bindsym $mod+n workspace next_on_output
bindsym $mod+p workspace prev_on_output

bindsym $mod+Escape bar mode toggle
# reload the configuration file
bindsym $mod+Shift+c reload
# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Mod1+c restart
# exit i3 (logs you out of your X session)
#bindsym $mod+Mod1+Escape exec "i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -B 'Yes, exit i3' 'i3-msg exit'"
bindsym $mod+Mod1+Escape exit
# Scratchpad
bindsym $mod+Control+Return [class="Scratchpad"] scratchpad show;[class="Scratchpad"] resize set 90 ppt 90 ppt;[class="Scratchpad"] move position center

for_window [class="Yad|TilingFloat|Gnome-calculator"] floating enable
for_window [window_role="pop-up"] floating enable
for_window [class="Google-chrome|Chromium|Firefox-esr|Navigator|Gnome-calculator"] exec --no-startup-id\
 transset --id $(printf '%d' $($focused)) 0.9
for_window [class="Scratchpad"] move scratchpad

# Start i3bar to display a workspace bar (plus the system information i3status
# finds out, if available)
bar {
  position top
  mode hide
  font xft:Hack Nerd Font Mono, Icons 9
  colors {
    background #00000080
    separator #666666
    statusline #dddddd
    focused_workspace #0088CC #0088CC #ffffff
    active_workspace #333333 #333333 #ffffff
    inactive_workspace #333333 #333333 #888888
    urgent_workspace #2f343a #900000 #ffffff
  }
  i3bar_command i3bar --transparency
  tray_output primary
  # output primary
  # status_command i3status -c ~/.config/i3/status-$(uname -n)
  status_command i3status-rs ~/.config/i3/config.toml
}

exec_always --no-startup-id "case $(tmux ls|sed -nE 's/^(scratchpad: )[^)]+\) ?(\(attached\))?$/\1\2/p') in
 'scratchpad: (attached)') :;;
 'scratchpad: ') st -f $font -c Scratchpad tmux a -t scratchpad;;
 *) st -f $font -c Scratchpad tmux new -s scratchpad;;
esac &"
# exec_always --no-startup-id "wezterm cli --no-auto-start --class Scratchpad list-clients\
#  || wezterm start --class Scratchpad &"
# exec_always --no-startup-id "case $(tmux ls|sed -nE 's/^(scratchpad: )[^)]+\) ?(\(attached\))?$/\1\2/p') in
#  'scratchpad: (attached)') :;;
#  'scratchpad: ') alacritty --class Scratchpad,Alacritty -e tmux a -t scratchpad;;
#  *) alacritty --class Scratchpad,Alacritty -e tmux new -s scratchpad;;
# esac &"
exec_always --no-startup-id "PID=$(pgrep -x i3bar); while [ -z $PID ];\
 do sleep 1; PID=$(pgrep -x i3bar); done;\
 kill -s STOP $PID && kill -s CONT $PID && pkill -f 'sh -c i3bar'"
